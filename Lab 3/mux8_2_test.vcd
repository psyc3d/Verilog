$date
	Mon Jan 27 22:53:36 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mux8_2_tb $end
$var wire 1 ! o $end
$var reg 8 " I1 [7:0] $end
$var reg 3 # I2 [2:0] $end
$scope module m2 $end
$var wire 8 $ d [7:0] $end
$var wire 3 % s [2:0] $end
$var wire 2 & w2 [1:0] $end
$var wire 4 ' w1 [3:0] $end
$var wire 1 ! out $end
$scope module m1 $end
$var wire 2 ( d [1:0] $end
$var wire 1 ) out $end
$var wire 1 * s $end
$var wire 1 + w1 $end
$var wire 2 , w2 [1:0] $end
$upscope $end
$scope module m2 $end
$var wire 2 - d [1:0] $end
$var wire 1 . out $end
$var wire 1 / s $end
$var wire 1 0 w1 $end
$var wire 2 1 w2 [1:0] $end
$upscope $end
$scope module m3 $end
$var wire 2 2 d [1:0] $end
$var wire 1 3 out $end
$var wire 1 4 s $end
$var wire 1 5 w1 $end
$var wire 2 6 w2 [1:0] $end
$upscope $end
$scope module m4 $end
$var wire 2 7 d [1:0] $end
$var wire 1 8 out $end
$var wire 1 9 s $end
$var wire 1 : w1 $end
$var wire 2 ; w2 [1:0] $end
$upscope $end
$scope module m5 $end
$var wire 2 < d [1:0] $end
$var wire 1 = out $end
$var wire 1 > s $end
$var wire 1 ? w1 $end
$var wire 2 @ w2 [1:0] $end
$upscope $end
$scope module m6 $end
$var wire 2 A d [1:0] $end
$var wire 1 B out $end
$var wire 1 C s $end
$var wire 1 D w1 $end
$var wire 2 E w2 [1:0] $end
$upscope $end
$scope module m7 $end
$var wire 2 F d [1:0] $end
$var wire 1 ! out $end
$var wire 1 G s $end
$var wire 1 H w1 $end
$var wire 2 I w2 [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 I
1H
0G
b1 F
b0 E
1D
0C
0B
b0 A
b1 @
1?
0>
1=
b1 <
b0 ;
1:
09
08
b0 7
b0 6
15
04
03
b0 2
b0 1
10
0/
0.
b0 -
b1 ,
1+
0*
1)
b1 (
b1 '
b1 &
b0 %
b1 $
b0 #
b1 "
1!
$end
#10
b11 <
b1 A
b1 &
b1 F
1=
0!
1.
b111 '
13
b10 @
b0 I
0+
b10 ,
00
b10 1
05
b10 6
0:
0?
0D
0H
1*
1/
14
19
1>
1C
1G
b11 (
b11 -
b11 2
b1 7
b111 #
b111 %
b1111111 "
b1111111 $
#20
