$date
	Wed Jan 22 10:42:56 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module four_ripple_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " carry $end
$var reg 4 # I1 [3:0] $end
$var reg 4 $ I2 [3:0] $end
$var reg 1 % I3 $end
$scope module r1 $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 1 ( w3 $end
$var wire 1 ) w2 $end
$var wire 1 * w1 $end
$var wire 4 + s [3:0] $end
$var wire 1 " carry $end
$scope module f1 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 * carry $end
$var wire 1 % cin $end
$var wire 1 . sum $end
$var wire 3 / w2 [2:0] $end
$upscope $end
$scope module f2 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 ) carry $end
$var wire 1 * cin $end
$var wire 1 2 sum $end
$var wire 3 3 w2 [2:0] $end
$upscope $end
$scope module f3 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 ( carry $end
$var wire 1 ) cin $end
$var wire 1 6 sum $end
$var wire 3 7 w2 [2:0] $end
$upscope $end
$scope module f4 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 " carry $end
$var wire 1 ( cin $end
$var wire 1 : sum $end
$var wire 3 ; w2 [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ;
0:
09
08
b0 7
06
05
04
b0 3
02
01
00
b0 /
0.
0-
0,
b0 +
0*
0)
0(
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#10
b10 !
b10 +
12
1*
b1 /
1-
1,
b1 $
b1 '
b1 #
b1 &
#20
0:
0(
b0 7
0*
0)
16
b0 /
12
b0 3
b111 !
b111 +
1.
0-
15
0,
10
1%
b100 $
b100 '
b10 #
b10 &
#30
1:
1)
1*
1(
1"
12
b111 3
b1 /
16
b111 7
b111 ;
b1110 !
b1110 +
0.
1-
11
19
1,
14
18
0%
b1111 $
b1111 '
b1111 #
b1111 &
#40
0"
b1100 !
b1100 +
02
b10 3
b0 ;
b100 /
0-
09
00
08
1%
b110 $
b110 '
b101 #
b101 &
#50
