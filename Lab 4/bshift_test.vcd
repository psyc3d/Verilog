$date
	Tue Jan 28 14:27:33 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module bshift_tb $end
$var wire 4 ! o [3:0] $end
$var reg 4 " I1 [3:0] $end
$var reg 2 # I2 [1:0] $end
$scope module b1 $end
$var wire 4 $ in [3:0] $end
$var wire 2 % s [1:0] $end
$var wire 4 & out [3:0] $end
$scope module m1 $end
$var wire 1 ' d1 $end
$var wire 1 ( d2 $end
$var wire 1 ) d3 $end
$var wire 1 * d4 $end
$var wire 1 + out $end
$var wire 2 , s [1:0] $end
$var wire 4 - w2 [3:0] $end
$var wire 2 . w1 [1:0] $end
$upscope $end
$scope module m2 $end
$var wire 1 / d1 $end
$var wire 1 0 d2 $end
$var wire 1 1 d3 $end
$var wire 1 2 d4 $end
$var wire 1 3 out $end
$var wire 2 4 s [1:0] $end
$var wire 4 5 w2 [3:0] $end
$var wire 2 6 w1 [1:0] $end
$upscope $end
$scope module m3 $end
$var wire 1 7 d1 $end
$var wire 1 8 d2 $end
$var wire 1 9 d3 $end
$var wire 1 : d4 $end
$var wire 1 ; out $end
$var wire 2 < s [1:0] $end
$var wire 4 = w2 [3:0] $end
$var wire 2 > w1 [1:0] $end
$upscope $end
$scope module m4 $end
$var wire 1 ? d1 $end
$var wire 1 @ d2 $end
$var wire 1 A d3 $end
$var wire 1 B d4 $end
$var wire 1 C out $end
$var wire 2 D s [1:0] $end
$var wire 4 E w2 [3:0] $end
$var wire 2 F w1 [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11 F
b1 E
b0 D
1C
0B
1A
1@
1?
b11 >
b1 =
b0 <
1;
1:
09
18
17
b11 6
b1 5
b0 4
13
12
11
00
1/
b11 .
b0 -
b0 ,
0+
1*
1)
1(
0'
b1110 &
b0 %
b1110 $
b0 #
b1110 "
b1110 !
$end
#10
03
b1101 !
b1101 &
1+
b0 5
b1 .
b10 -
b1 6
b1 >
b10 =
b1 F
b10 E
b10 #
b10 %
b10 ,
b10 4
b10 <
b10 D
#20
13
1+
b100 5
0;
b1011 !
b1011 &
1C
b10 .
b100 -
b10 6
b10 >
b0 =
b10 F
b100 E
b1 #
b1 %
b1 ,
b1 4
b1 <
b1 D
#30
0C
b111 !
b111 &
1;
b0 E
b0 .
b1000 -
b0 6
b1000 5
b0 >
b1000 =
b0 F
b11 #
b11 %
b11 ,
b11 4
b11 <
b11 D
#40
