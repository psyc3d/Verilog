$date
	Tue Jan 28 14:59:51 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module pllAddSub_tb $end
$var wire 4 ! s [3:0] $end
$var wire 4 " c [3:0] $end
$var reg 4 # I1 [3:0] $end
$var reg 4 $ I2 [3:0] $end
$var reg 1 % I3 $end
$scope module u1 $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( sum [3:0] $end
$var wire 4 ) c [3:0] $end
$var wire 4 * b1 [3:0] $end
$scope module f1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - carry $end
$var wire 1 % cin $end
$var wire 1 . sum $end
$var wire 3 / w2 [2:0] $end
$upscope $end
$scope module f2 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 carry $end
$var wire 1 3 cin $end
$var wire 1 4 sum $end
$var wire 3 5 w2 [2:0] $end
$upscope $end
$scope module f3 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 8 carry $end
$var wire 1 9 cin $end
$var wire 1 : sum $end
$var wire 3 ; w2 [2:0] $end
$upscope $end
$scope module f4 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 > carry $end
$var wire 1 ? cin $end
$var wire 1 @ sum $end
$var wire 3 A w2 [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 A
1@
0?
0>
0=
1<
b0 ;
1:
09
08
17
06
b0 5
14
03
02
01
10
b0 /
1.
0-
1,
0+
b101 *
b0 )
b1111 (
b101 '
b1010 &
0%
b101 $
b1010 #
b0 "
b1111 !
$end
#10
1>
0@
b100 A
1?
18
0:
b10 ;
19
12
04
b100 5
13
b1111 "
b1111 )
1-
b0 !
b0 (
0.
b10 /
1%
b1010 $
b1010 '
#20
0?
08
1:
b0 ;
09
03
02
0>
b0 "
b0 )
0-
0,
1=
04
b0 5
1@
b0 A
b1100 *
b1100 !
b1100 (
0.
b0 /
00
0<
0%
b1100 $
b1100 '
b0 #
b0 &
#30
1?
18
0:
b10 ;
19
b110 "
b110 )
12
b1 5
1@
11
0=
b110 *
1.
b1001 !
b1001 (
04
1+
10
b110 $
b110 '
b11 #
b11 &
#40
1?
18
19
12
13
1>
04
b100 5
b1111 "
b1111 )
1-
01
07
0:
b100 ;
0@
b100 A
b0 *
b0 !
b0 (
0.
b100 /
16
1<
1%
b1111 $
b1111 '
b1111 #
b1111 &
#50
